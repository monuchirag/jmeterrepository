<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Ostrich_Rebuild_01" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1885530584">
            <stringProp name="51">3</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="51">3</stringProp>
            <stringProp name="1572771">3600</stringProp>
            <stringProp name="51">3</stringProp>
          </collectionProp>
          <collectionProp name="192284786">
            <stringProp name="52">4</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-966676255">
            <stringProp name="53">5</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-1158247081">
            <stringProp name="54">6</stringProp>
            <stringProp name="1543941">2700</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-1688780340">
            <stringProp name="55">7</stringProp>
            <stringProp name="1569888">3300</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate, br </stringProp>
            </elementProp>
            <elementProp name="x-dynatrace-test" elementType="Header">
              <stringProp name="Header.name">x-dynatrace-test</stringProp>
              <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="BASE_URL_1" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_1</stringProp>
              <stringProp name="Argument.value">ostrich-np.cloudapps.telus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_2" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_2</stringProp>
              <stringProp name="Argument.value">teamsso-its04.tsl.telus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_3" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_3</stringProp>
              <stringProp name="Argument.value">teamsso-its04.telus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Pacing" elementType="Argument">
              <stringProp name="Argument.name">Pacing</stringProp>
              <stringProp name="Argument.value">${__P(propPacing,33)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">User.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">User</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">Address.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">address</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="UserDetails" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">UserDetails.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">Frist,Last,mail</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.embedded_url_re">^((?!google|facebook|pinterest|twimg|doubleclick|png|css|min.js|favicon.ico|.js).)*$</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
          <collectionProp name="DNSCacheManager.servers"/>
          <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
          <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
        </DNSCacheManager>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="endTime" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def endTime = dateobj.getTime();
vars.put(&quot;endTime&quot;,endTime.toString())
log.info(&quot;Current date in the specified format: &quot; + endTime);
SampleResult.setIgnore();
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">&quot;${__jm__Ostrich_Rebuild_01__idx}&quot; != &quot;0&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing Timer" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${myDelay}</stringProp>
          </TestAction>
          <hashTree>
            <JSR223Timer guiclass="TestBeanGUI" testclass="JSR223Timer" testname="JSR223 Timer" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">Long pacingInput = Long.valueOf(vars.get(&apos;Pacing&apos;))*1000;
Long elapsed = Long.valueOf(vars.get(&apos;endTime&apos;)) - Long.valueOf(vars.get(&apos;startTime&apos;))
Long pacing = pacingInput-elapsed;
if ( pacing &gt; 0 ) 
{
	vars.put(&quot;myDelay&quot;, String.valueOf(pacing));
	return 0;
}
else 
{
	vars.put(&quot;myDelay&quot;, &quot;0&quot;);
	return 0; 
}
</stringProp>
            </JSR223Timer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="startTime" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def startTime = dateobj.getTime();
log.info(&quot;Current date in the specified format: &quot; + startTime);
vars.put(&quot;startTime&quot;,startTime.toString())
SampleResult.setIgnore();</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ostrich_Rebuild_Launch_01" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SAMLRequest" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SAMLRequest</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SAMLRequest&quot; value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No value</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RelayState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RelayState</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;RelayState&quot; value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No value</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://teamsso-its04.tsl.telus.com/idp/SSO.saml2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="RelayState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RelayState</stringProp>
                  <stringProp name="Argument.value">${RelayState}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SAMLRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">SAMLRequest</stringProp>
                  <stringProp name="Argument.value">${SAMLRequest}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">idp/SSO.saml2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="idp" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">idp</stringProp>
              <stringProp name="RegexExtractor.regex">idp/(.+?)/re</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://teamsso-its04.tsl.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0&amp;svrid=6&amp;flavor=post&amp;vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0&amp;modifiedSince=1701105068743&amp;rf=https%3A%2F%2Fteamsso-its04.tsl.telus.com%2Fidp%2FV5NTYoEg1P%2FresumeSAML20%2Fidp%2FSSO.ping&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=3718023572&amp;en=lxotfoy3&amp;end=1" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1701105068743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">3718023572</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1701239348808|0|dn|-1|svtrg|1|svm|i1^sk0^sh0|lr|https://teamsso-its04.telus.com/$PV=1$rId=RID_-1463469015$rpId=853913895$md=mdcc1,en;mdcc2,bc$url=https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping$title=TELUS SSO$latC=0$app=72172083ddd940ed$vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0$fId=239353696_538$v=10277231024135831$time=1701239359780</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://teamsso-its04.tsl.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0&amp;svrid=6&amp;flavor=post&amp;vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0&amp;modifiedSince=1701105068743&amp;rf=https%3A%2F%2Fteamsso-its04.tsl.telus.com%2Fidp%2FV5NTYoEg1P%2FresumeSAML20%2Fidp%2FSSO.ping&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=1449412819&amp;en=lxotfoy3&amp;end=1" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1701105068743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">1449412819</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1701239348808|1701239365666|dn|111|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|lr|https://teamsso-its04.telus.com/,2|3|_event_|1701239348808|_vc_|V|16858^pc|VCD|1068|VCDS|2|VCS|16902|VCO|17904|VCI|0|VE|1156^p4^p4472^ps^s#controls-5c32565c-a0ba-42be-8060-34d2cf2285fa|S|7011,2|4|_event_|1701239348808|_wv_|lcpE|DIV|lcpSel|div.login-container|lcpS|253508|lcpT|16842|lcpU|https://teamsso-its04.tsl.telus.com/assets/assets/leaves-retina-web.png|lcpLT|16801|fcp|5392|fp|5392|cls|0|lt|108,2|2|_onload_|_load_|-|1701239365618|1701239365647|dn|111|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0,1|5|_event_|1701239348808|_view_|tvtrg|1|tvm|i1^sk0^sh0$rId=RID_-1463469015$rpId=853913895$domR=1701239365610$tvn=/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping$tvt=1701239348808$tvm=i1;k0;h0$tvtrg=1$w=1280$h=571$sw=1280$sh=720$nt=a0b1701239348808c4d2207e2207f2207g2207h2207i2207j2207k2220l3334m3338o6927p6927q6934r16803s16810t16839u14471v14171w14171X200M853913895V0$ni=3g|1.3$md=mdcc1,en;mdcc2,bc$url=https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping$title=TELUS SSO$latC=0$app=72172083ddd940ed$vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0$fId=239353696_538$v=10277231024135831$vID=1701232102566IJVSO5VI03LKDDTV27P26P1QJTAFV43K$nVAT=1$time=1701239366792</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://teamsso-its04.tsl.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0&amp;svrid=6&amp;flavor=post&amp;vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0&amp;modifiedSince=1701105068743&amp;rf=https%3A%2F%2Fteamsso-its04.tsl.telus.com%2Fidp%2FV5NTYoEg1P%2FresumeSAML20%2Fidp%2FSSO.ping&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=1136174772&amp;en=lxotfoy3&amp;end=1" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1701105068743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">1136174772</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$tvn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$tvn</stringProp>
                  <stringProp name="Argument.value">/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping$tvt=1701239348808$tvm=i1;k0;h0$tvtrg=1$w=1280$h=571$sw=1280$sh=720$ni=3g|1.3$rt=1-1701239348808;https://teamsso-its04.tsl.telus.com/assets/styles/tds.min.css|b4935e0f0g0h0i0j0k7l341m347u46749v46449w46449X200K1I11M-1936992265V0|https://teamsso-its04.tsl.telus.com/assets/styles/telus-sso-improvement.css|b4936e0f0g0h0i0j0k7l344m355u7248v6948w6948X200K1I11M-1780243237V0|https://teamsso-its04.tsl.telus.com/assets/bower_5Fcomponents/require.js|b5296e0f0g0h0i0j0k7l396m1626u86782v86482w86482X200K1I12M-1308521784V0|https://teamsso-its04.tsl.telus.com/assets/assets/telus-logo.svg|b5300e0f0g0h0i0j0k10l394m399u4325v4025w4025X200E1F10500O150P70Q194R36I9M364087719V0|https://teamsso-its04.tsl.telus.com/assets/assets/leaves-retina-web.png|b5301e0f0g0h0i0j0k10l798m11499u721316v721016w721016X200E1F576431O1263P716Q3964R1134I9M281814545V0|https://teamsso-its04.tsl.telus.com/assets/assets/wave-header-default.png|b5302e0f0g0h0i0j0k398l800m4816u35396v35096w35096X200N2O1263P250Q1400R156I9M237510917V0|https://teamsso-its04.tsl.telus.com/assets/styles/fonts/core-icons.woff2|b5304e0f0g0h0i0j0k1629l1958m1960u4336v4036w4036X200I9M-1776235704V0W1|https://teamsso-its04.tsl.telus.com/assets/styles/fonts/b8765d4b-d9a3-48b9-ac65-560e7517cf0e.woff2|b5305e0f0g0h0i0j0k1629l2331m2335u20148v19848w19848X200I9M222881040V0W1|https://teamsso-its04.tsl.telus.com/assets/styles/fonts/3e8a8b56-3cb0-4347-b670-eaaf06b76e9b.woff2|b5305e0f0g0h0i0j0k2345l2938m3263u19604v19304w19304X200I9M539687475V0W1|https://teamsso-its04.tsl.telus.com/assets/styles/fonts/aff68211-86bb-476d-882e-f7a3face144c.woff2|b5305e0f0g0h0i0j0k2345l2675m3262u50728v50428w50428X200I9M-1842408952V0W1|https://teamsso-its04.tsl.telus.com/assets/styles/fonts/dc50c02f-3f77-4e75-b89c-e3f9bb4752e6.woff2|b5306e0f4821g4821h4821i5488j5155k5488l6154m6194u19772v19472w19472X200I9M1250736892V0W1|https://teamsso-its04.tsl.telus.com/assets/scripts/main.js|b6945e0f0g0h0i0j0k323l691m695u790v490w490X200I12M-830917164V0|https://teamsso-its04.tsl.telus.com/assets/bower_5Fcomponents/jquery.js|b7644e0f0g0h0i0j0k935l1306m3134u247897v247597w247597X200I12M1232650584V0|https://teamsso-its04.tsl.telus.com/assets/bower_5Fcomponents/js.cookie.js|b7644e0f0g0h0i0j0k934l1303m1308u4172v3872w3872X200I12M437807348V0|https://teamsso-its04.tsl.telus.com/assets/scripts/validation-rules.js|b7645e0f0g0h0i0j0k1314l3686m3854u5599v5299w5299X200I12M-715204104V0|https://teamsso-its04.tsl.telus.com/assets/scripts/login.js|b7646e0f0g0h0i0j0k2480l3147m3152u19378v19078w19078X200I12M-1944940161V0|https://teamsso-its04.tsl.telus.com/assets/scripts/modal.js|b7646e0f0g0h0i0j0k3132l3459m3852u788v488w488X200I12M-1225106239V0|https://static.telus.com/common/images/favicon/TELUS-favicon-128.png|b16859e0m1870I22$url=https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping$title=TELUS SSO$latC=0$app=72172083ddd940ed$vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0$fId=239353696_538$v=10277231024135831$vID=1701232102566IJVSO5VI03LKDDTV27P26P1QJTAFV43K$time=1701239368845</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ostrich_Rebuild_Log_IN_02" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://teamsso-its04.tsl.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0&amp;svrid=6&amp;flavor=post&amp;vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0&amp;modifiedSince=1701105068743&amp;rf=https%3A%2F%2Fteamsso-its04.tsl.telus.com%2Fidp%2FV5NTYoEg1P%2FresumeSAML20%2Fidp%2FSSO.ping&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=583454425&amp;en=lxotfoy3&amp;end=1" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1701105068743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">583454425</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|6|_event_|1701239379498|_wv_|AAI|1|fIS|30563|fID|2$rId=RID_-1463469015$rpId=853913895$domR=1701239365610$tvn=/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping$tvt=1701239348808$tvm=i1;k0;h0$tvtrg=1$w=1280$h=571$sw=1280$sh=720$ni=3g|1.3$md=mdcc1,en;mdcc2,bc$url=https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping$title=TELUS SSO$latC=0$app=72172083ddd940ed$vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0$fId=239353696_538$v=10277231024135831$vID=1701232102566IJVSO5VI03LKDDTV27P26P1QJTAFV43K$time=1701239381517</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://teamsso-its04.tsl.telus.com/idp/V5NTYoEg1P/resumeSAML20/idp/SSO.ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pf.username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pf.username</stringProp>
                  <stringProp name="Argument.value">${User}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pf.ok" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pf.ok</stringProp>
                  <stringProp name="Argument.value">clicked</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pf.pass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pf.pass</stringProp>
                  <stringProp name="Argument.value">r28J1HJnjYZw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">idp/${idp}/resumeSAML20/idp/SSO.ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RelayState" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RelayState1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;RelayState&quot; value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No value</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SAMLResponse" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SAMLResponse</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SAMLResponse&quot; value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No value</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://teamsso-its04.telus.com/sp/ACS.saml2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="RelayState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RelayState</stringProp>
                  <stringProp name="Argument.value">${RelayState1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SAMLResponse" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">SAMLResponse</stringProp>
                  <stringProp name="Argument.value">${SAMLResponse}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sp/ACS.saml2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0&amp;svrid=6&amp;flavor=post&amp;vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0&amp;modifiedSince=1701105068743&amp;rf=https%3A%2F%2Fostrich-np.cloudapps.telus.com%2F%23id_token%3DeyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=3876444642&amp;en=lxotfoy3&amp;end=1" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1701105068743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://ostrich-np.cloudapps.telus.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">3876444642</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1701239393566|0|dn|-1|svtrg|1|svm|i1^sk0^sh0|lr|https://teamsso-its04.tsl.telus.com/|bg|1$PV=1$rId=RID_2418$rpId=1824552130$md=mdcc1,en;mdcc2,bc$url=https://ostrich-np.cloudapps.telus.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw$title=$latC=0$app=72172083ddd940ed$vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0$fId=239398956_692$v=10277231024135831$time=1701239404038</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/api/encrypt" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${User}&quot;,&quot;first_name&quot;:&quot;${Frist}&quot;,&quot;last_name&quot;:&quot;${Last}&quot;,&quot;email&quot;:&quot;${mail}&quot;,&quot;role&quot;:&quot;Admin&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/encrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="encryptedData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">encryptedData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;encryptedData&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-162129010">encryptedData</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0&amp;svrid=6&amp;flavor=post&amp;vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0&amp;modifiedSince=1701105068743&amp;rf=https%3A%2F%2Fostrich-np.cloudapps.telus.com%2F%23id_token%3DeyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=3827062581&amp;en=lxotfoy3&amp;end=1" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1701105068743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://ostrich-np.cloudapps.telus.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">3827062581</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1701239393566|1701239420676|dn|38|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|lr|https://teamsso-its04.tsl.telus.com/|bg|1,2|3|_event_|1701239393566|_vc_|V|27110^pc|VCD|7299|VCDS|2|VCS|19817|VCO|21275|VCI|0|VE|0^p0^p721173^ps^sbody:nth-of-type(1)|S|18837,2|4|_event_|1701239393566|_wv_|lcpE|IMG|lcpSel|img.Image__StyledImage-components-web__sc-blwu4l-0.hjUZlh|lcpS|12933|lcpT|20735|lcpU|https://ostrich-np.cloudapps.telus.com/logo.svg|lcpLT|20716|fcp|6268|fp|6268|cls|0.6608|lt|327,2|2|_onload_|_load_|-|1701239413322|1701239413322|dn|38|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0,1|5|_event_|1701239393566|_view_|tvtrg|1|tvm|i1^sk0^sh0$rId=RID_2418$rpId=1824552130$domR=1701239413316$tvn=/$tvt=1701239393566$tvm=i1;k0;h0$tvtrg=1$w=1280$h=571$sw=1280$sh=720$nt=a0b1701239393566e1789f1789g1789h1789i1789j1789k1805l2257m2262o5462p19723q19723r19751s19756t19756u1363v1063w2470X200M1824552130V0$ni=3g|0.6$fd=p13.4.12$md=mdcc1,en;mdcc2,bc$url=https://ostrich-np.cloudapps.telus.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw$title=$latC=0$app=72172083ddd940ed$vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0$fId=239398956_692$v=10277231024135831$vID=1701232102566IJVSO5VI03LKDDTV27P26P1QJTAFV43K$time=1701239420698</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0&amp;svrid=6&amp;flavor=post&amp;vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0&amp;modifiedSince=1701105068743&amp;rf=https%3A%2F%2Fostrich-np.cloudapps.telus.com%2F%23id_token%3DeyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=599188745&amp;en=lxotfoy3&amp;end=1" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1701105068743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://ostrich-np.cloudapps.telus.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">599188745</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_6_sn_97E16721A69B0A1CB29BD5E5A071A83E_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1_rcs-3Acss_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$tvn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$tvn</stringProp>
                  <stringProp name="Argument.value">/$tvt=1701239393566$tvm=i1;k0;h0$tvtrg=1$w=1280$h=571$sw=1280$sh=720$ni=3g|0.6$rt=1-1701239393566;https://ostrich-np.cloudapps.telus.com/_5Fnext/static/css/60d73080ecf631e7.css|b2283e0f0g0h0i0j0k48l3086m3100u1030v730w1950X200K1I11M1494297933V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/webpack-18e1e020f3fa96ee.js|b2284e0f0g0h0i0j0k3114l3540m3545u1167v867w1712X200I12M777085626V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/framework-18c7e6fcf99e5daa.js|b2284e0f0g0h0i0j0k3181l3618m4623u45631v45331w141000X200I12M-1046464587V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/main-5b0a557a948b2294.js|b2284e0f0g0h0i0j0k3188l3939m4942u29744v29444w101631X200I12M-554945252V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/pages/_5Fapp-d7a94600aae24736.js|b2284e0f0g0h0i0j0k3560l4941m6269u65763v65463w283014X200I12M-50248060V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/29107295-5d9eb55b2b652ca8.js|b2284e0f0g0h0i0j0k3985l7694m8410u25167v24867w69764X200I12M564563336V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/75fc9c18-fa9d387c9e94fed2.js|b2285e0f0g0h0i0j0k3990l6268m6926u18932v18632w58288X200I12M-57043104V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/895-1c41a6b0aa7f23db.js|b2285e0f0g0h0i0j0k3995l6586m7695u63416v63116w217406X200I12M1996594062V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/965-36e606d0ba155167.js|b2285e0f0g0h0i0j0k3997l8409m17217u316918v316618w1129767X200I12M-1215967392V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/971-b9fe3b9660bda2f4.js|b2285e0f0g0h0i0j0k3999l12285m12649u13871v13571w36192X200I12M1654493878V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/chunks/pages/index-d3f2c1c11bcc7343.js|b2285e0f0g0h0i0j0k4631l16501m16856u10489v10189w36424X200I12M-1610552159V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/N7oM6n1GHLS2I3wqXJPx1/_5FbuildManifest.js|b2286e0f0g0h0i0j0k4947l17215m17223u1118v818w818X200I12M453783368V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/N7oM6n1GHLS2I3wqXJPx1/_5FssgManifest.js|b2286e0f0g0h0i0j0k6274l17215m17224u377v77w77X200I12M-281895820V0|https://ostrich-np.cloudapps.telus.com/api/encrypt|b19726e0f0g0h0i0j0k8l478m481u492v192w192X200z1I2M698940478V0W1|https://ostrich-np.cloudapps.telus.com/favicon.ico|b19767e0f0g0h0i0j0k17l444m450u584v284w1150X200I22M-1752396219V0|https://ostrich-np.cloudapps.telus.com/logo.svg|b20274e0f0g0h0i0j0k9l434m439u2162v1862w4225X200N2O200P65Q300R97I7M813671047V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/media/logo2.9043deb6.png|b20274e0f0g0h0i0j0k10l446m449u11452v11152w11152X200N2O108P35Q1278R415I7M-717844276V0|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/media/flaxBackground.144e12bf.jpg|b20275e0f0g0h0i0j0k11l814m2531u131628v131328w131328X200E2F721173O1263P652Q1920R1080S6839I9M9057207V0|https://cdn.telus.digital/uds/v2_5F24_5F5-HelveticaNow-400-WEkxmUin6LF4UvJyqomON.woff|b20276e0m6834X200I9|https://cdn.telus.digital/uds/v2_5F24_5F5-HelveticaNow-700-4fMzebweZdYxcKc04apmV.woff|b20277e0m3218X200I9|https://cdn.telus.digital/uds/v2_5F24_5F5-HelveticaNow-500-ceCXpkP4HAScuq-5bFMWS.woff|b20277e0m4659X200I9|https://ostrich-np.cloudapps.telus.com/api/decrypt|b20298e0f0g0h0i0j0k9l1113m1117u423v123w123X200z1I2M-819567365V0W1|https://ostrich-np.cloudapps.telus.com/api/decrypt|b20322e0f0g0h0i0j0k8l2483m2488u423v123w123X200z1I2M-133505948V0W1|https://cdn.telus.digital/uds/v2_5F24_5F5-HelveticaNow-300-tsDvG0uEoU6axoIjibVhj.otf|b20355e0m7392X200I9|https://ostrich-np.cloudapps.telus.com/_5Fnext/static/media/flaxBackground.144e12bf.jpg|b21284e0f0g0h0i0j0k3668l4103m5826u131628v131328w131328X200I7M813007580V0$url=https://ostrich-np.cloudapps.telus.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImN2RzI3Y3JmVzlNMVVIQjFCekp0ekV3dWVLMF9SUzI1NiJ9.eyJzdWIiOiJ4MjQ4NjM5IiwiYXVkIjoiNmQ4MDdhZjMtZmU0MC00NzRhLTk5ODktYWMwNzk0NzUyZTlkIiwianRpIjoiTW1vZm9aZXRHNWpDUnpYVGJRRnZkTyIsImlzcyI6Imh0dHBzOi8vdGVhbXNzby1pdHMwNC50ZWx1cy5jb20iLCJpYXQiOjE3MDEyMzkzOTQsImV4cCI6MTcwMTIzOTY5NCwiYXV0aF90aW1lIjoxNzAxMjM5Mzg5LCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3Nlczp1bnNwZWNpZmllZCIsImdpdmVuX25hbWUiOiJTdW1pdCIsImZhbWlseV9uYW1lIjoiS3VtYXIiLCJlbWFpbCI6InN1bWl0Lmt1bWFyM0B0ZWx1cy5jb20iLCJ1c2VyQXNzZXRzIjpbeyJpZCI6IjIyNzkxX29zdHJpY2hfYWRtaW4iLCJlbnRpdHlUeXBlIjoiYXBwbGljYXRpb24iLCJhc3NldFR5cGUiOiJncm91cCIsInJvbGUiOiJtZW1iZXIifV0sIm5vbmNlIjoiRjNlQnFUdUJVRmdNWGZHUFJac3NtdTVIIn0.27aeSqJM9jkmWNwSOrwDLsgI4aOOInXlL7KUVEEZ2rkVKWV8aVXyzATVao2DMAXu3oPWiQ53Pa43hmIu3MN64mvRAUgBEYNegANUfQoDVkaJr79U19mEcgxN1qnITgVBxwCK7_Ul-S7NsnEmRU-_QygO6bjKT5styWg_KjrY7sDEYoqpNm3t-QLmQklBKXnH73mNWWYA24RmYZ_UU8-_wPOHour09dgOBYCjTFuMAbbBZchrEcYGhgzWbkz5YHWGrbFqxXhLO8wf3sUAGYOHX2kkcMghYvvq7iBmZTnWhepHKXc3Vfwwbyi7ZKSfysN7ShgD_33I5uJoS7QjWkpOgw$title=$latC=0$app=72172083ddd940ed$vi=JQDVOPVKWMIPQORFHKPEIISLJFRMANHG-0$fId=239398956_692$v=10277231024135831$vID=1701232102566IJVSO5VI03LKDDTV27P26P1QJTAFV43K$time=1701239422730</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ostrich_Rebuild_Search_address_03" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_001https://ostrich-np.cloudapps.telus.com/api/encrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${User}&quot;,&quot;first_name&quot;:&quot;${Frist}&quot;,&quot;last_name&quot;:&quot;${Last}&quot;,&quot;email&quot;:&quot;${mail}&quot;,&quot;role&quot;:&quot;Admin&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/encrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="encryptedData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">encryptedData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;encryptedData&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-162129010">encryptedData</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_002https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_003https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_004https://ostrich-np.cloudapps.telus.com/api/getAddress" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/getAddress/${address}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="payload1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">payload1</stringProp>
              <stringProp name="RegexExtractor.regex">payload&quot;\:\{&quot;id&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1377524046">addressList</stringProp>
                <stringProp name="-1147692044">address</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_005https://ostrich-np.cloudapps.telus.com/api/getAddressbyId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/getAddressbyId/${payload1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MUNICIPALITY" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">MUNICIPALITY</stringProp>
              <stringProp name="RegexExtractor.regex">MUNICIPALITY&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="houseNumber" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">houseNumber</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;houseNumber&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="city" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">city</stringProp>
              <stringProp name="RegexExtractor.regex">city&quot;:&quot;(.+?)&quot;,&quot;province&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$$2$</stringProp>
              <stringProp name="RegexExtractor.default">novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="addresskey" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">addresskey</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;saNo&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="streetName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">streetName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;streetName&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1226586499">${payload1}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_006https://ostrich-np.cloudapps.telus.com/api/getAddress" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/getAddress/${address}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">4519%20CANADA%20WAY%20BURNABY%20BC%20V5G4S4</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="50551">304</stringProp>
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_007https://ostrich-np.cloudapps.telus.com/api/getFifa" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/getFifa/${payload1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MUNICIPALITY" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">MUNICIPALITY</stringProp>
              <stringProp name="RegexExtractor.regex">MUNICIPALITY&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">novalue</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3142846">fifa</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_008https://ostrich-np.cloudapps.telus.com/api/getSMA" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;municipality&quot;:&quot;${city_g1}&quot;,&quot;slocation&quot;:&quot;${houseNumber} ${streetName}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/getSMA</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2013050302">DESIGN</stringProp>
                <stringProp name="2432590">OPER</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_009https://ostrich-np.cloudapps.telus.com/api/getSAQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;houseNumSuffix&quot;:&quot;${houseNumber}&quot;,&quot;street&quot;:&quot;${streetName}&quot;,&quot;city&quot;:&quot;${city_g1}&quot;,&quot;province&quot;:&quot;${city_g2}&quot;,&quot;addresskey&quot;:&quot;${addresskey}&quot;,&quot;plantProvince&quot;:&quot;${city_g2}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/getSAQ</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">CANADA WAY</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1234168387">STATUS&quot;:&quot;W&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ostrich_Rebuild_Click_Go_to_reports_04" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_001https://ostrich-np.cloudapps.telus.com/report" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">report</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="x-dynatrace-test" elementType="Header">
                  <stringProp name="Header.name">x-dynatrace-test</stringProp>
                  <stringProp name="Header.value">LSN=GUI;TSN=${__samplerName()};SI=BZM;LTN=GUI;VU=${__threadNum()};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="106940784">props</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_002https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_003https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_004https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_005https://ostrich-np.cloudapps.telus.com/api/reports/userLog" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="FromDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">FromDate</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd ,,-P5D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ToDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ToDate</stringProp>
                  <stringProp name="Argument.value">${__time(yyyy-MM-dd)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/reports/userLog</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67080131">EmpID</stringProp>
                <stringProp name="26637719">EmailID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_006https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_007https://ostrich-np.cloudapps.telus.com/api/decrypt" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;${encryptedData}&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="63116079">Admin</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ostrich_Rebuild_Click_Get_Report_05" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ostrich-np.cloudapps.telus.com/api/reports/userLog?" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="FromDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">FromDate</stringProp>
                  <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd ,,-P2D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ToDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ToDate</stringProp>
                  <stringProp name="Argument.value">${__time(yyyy-MM-dd)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/reports/userLog</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-906040525">EMPNAME</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
